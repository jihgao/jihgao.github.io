{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.//.*$","Editor.js","Layout.js","util.js","Preview.js","example.js","App.js","Menu.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","message","config","top","duration","maxCount","MyEditor","props","container","useRef","onChange","useEffect","_editor","editor","create","current","value","language","renderLineHighLight","lineDecorationWidth","lineNumbersLeft","lineNumbersWidth","fontSize","lineNumbers","automaticLayout","quickSuggestions","occurrencesHighlight","colorDecorators","wordWrap","theme","minimap","enabled","_model","getModel","saveCache","window","localStorage","setItem","getValue","info","handleMessage","evt","data","handleResize","layout","getBoundingClientRect","onDidChangeContent","debounce","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","addEventListener","removeEventListener","className","ref","MyLayout","children","head","document","mermaid","initialize","startOnLoad","md","MarkdownIt","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","use","tocPlugin","includeLevel","markerPattern","showProcessingMessages","messageStyle","jax","tex2jax","inlineMath","displayMath","processEscapes","skipTags","ignoreClass","availableFonts","showMathMenu","linebreaks","automatic","SVG","PreviewComponent","useState","MathJax","loaded","setLoaded","ele","shadow","source","print","render","cb","offcanvas","querySelector","innerHTML","querySelectorAll","forEach","$el","idx","mermaidAPI","textContent","svgCode","Hub","Queue","err","urls","attrs","loader","url","_attrs","Promise","reject","script","createElement","src","attr","setAttribute","appendChild","onload","onerror","Array","isArray","all","loadScripts","async","then","Config","getItem","App","example","setSource","Layout","Editor","newSource","Preview","runCMD","eventId","setTimeout","postMessage","Menu","menu","Item","key","href","onClick","preventDefault","overlay","trigger","overlayClassName","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0b578ab.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 312,\n\t\"./locale.js\": 312\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 789;","import React, {useRef, useEffect} from 'react';\nimport  {debounce} from 'lodash';\nimport message from 'antd/lib/message';\nimport { editor, KeyMod, KeyCode } from \"monaco-editor\";\nimport 'antd/lib/message/style/index.css';\n\nmessage.config({\n  top: 20,\n  duration: 2,\n  maxCount: 1\n});\n\nfunction MyEditor(props){\n  const container = useRef(null);\n  const { onChange } = props;\n  useEffect(() => {\n      const _editor = editor.create(container.current, {\n        value: props.value,\n        language: \"markdown\",\n        renderLineHighLight: \"none\",\n        lineDecorationWidth: 0,\n        lineNumbersLeft: 0,\n        lineNumbersWidth: 0,\n        fontSize: 20,\n        lineNumbers: \"on\",\n        automaticLayout: false,\n        quickSuggestions: false,\n        occurrencesHighlight: false,\n        colorDecorators: false,\n        wordWrap: true,\n        theme: \"vs-dark\",\n        minimap: {\n          enabled: false\n        }\n      });\n      const _model = _editor.getModel();\n      _model.onDidChangeContent(debounce(() => {\n        onChange(_model.getValue());\n      }, 500));\n      _editor.addCommand(KeyMod.CtrlCmd | KeyCode.KEY_S, saveCache);\n      function saveCache() {\n        window.localStorage.setItem('cached', _model.getValue());\n        message.info('Saved');\n      }\n      function handleMessage(evt){\n        if(evt.data.id === 'menu.save'){\n          saveCache();\n        }\n      }\n      function handleResize(){\n        _editor.layout(container.current.getBoundingClientRect())\n      }\n      window.addEventListener('resize', handleResize);\n      window.addEventListener('message', handleMessage);\n     return () => {\n        window.removeEventListener('message', handleMessage);\n        window.removeEventListener('resize', handleResize);\n      };\n  }, [props.value, onChange]);\n  return (\n    <div className=\"editor\" ref={container}/>\n  );\n}\n\nexport default MyEditor;\n","import React from \"react\";\n\nfunction MyLayout(props) {\n  return <div className=\"layout\">{props.children}</div>;\n}\n\nexport default MyLayout;\n","const head = document.head;\nexport const loadScripts = (urls, attrs = {}) => {\n  const loader = (url, _attrs = {}) => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = url;\n      Object.keys(_attrs || {}).forEach(attr => {\n        script.setAttribute(attr, _attrs[attr]);\n      });\n      head.appendChild(script);\n      script.onload = function() {\n        resolve(script);\n      };\n      script.onerror = function() {\n        reject(script);\n      };\n    });\n  };\n  if (Array.isArray(urls)){\n    return Promise.all(urls.map(([url, _attrs={}]) => {\n      return loader(url, _attrs);\n    }));\n  } else {\n    return loader(urls, attrs);\n  }\n};\n\n","import React, { useRef, useEffect, useState } from \"react\";\nimport MarkdownIt from \"markdown-it\";\nimport tocPlugin from \"markdown-it-table-of-contents\";\nimport mermaid from \"mermaid\";\nimport linkify from \"markdown-linkify\";\nimport {loadScripts} from './util';\nmermaid.initialize({ startOnLoad: true });\n\nconst md = new MarkdownIt({\n  html: false,\n  xhtmlOut: false,\n  breaks: false,\n  langPrefix: \"language-\",\n  linkify: false,\n  typographer: false,\n  quotes: \"“”‘’\"\n});\n\nmd.use(tocPlugin, { includeLevel: [2,3], markerPattern: /^\\[toc\\]/im });\n\nconst config = {\n  showProcessingMessages: false, \n  messageStyle: \"none\",\n  jax: [\"input/TeX\", \"output/HTML-CSS\"],\n  tex2jax: {\n    inlineMath: [\n      [\"$\", \"$\"],\n      [\"\\\\(\", \"\\\\)\"],\n      [\"$$\", \"$$\"]\n    ],\n    displayMath: [\n      [\"$$\", \"$$\"],\n      [\"\\\\[\", \"\\\\]\"]\n    ],\n    processEscapes: true,\n    skipTags: [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\", \"a\"],\n    ignoreClass:\"editor\"\n  },\n  \"HTML-CSS\": {\n    availableFonts: [\"STIX\", \"TeX\"],\n    showMathMenu: false,\n    linebreaks: {\n      automatic: true\n    }\n  },\n  SVG: {\n    linebreaks: true\n  }\n};\n\nfunction PreviewComponent(props) {\n  const [loaded, setLoaded] = useState(!!window.MathJax);\n  const ele = useRef(null);\n  const shadow = useRef(null);\n  const { source } = props;\n  function handleMessage(evt){\n    if(evt.data.id === 'menu.saveAs'){\n       window.print();\n    }\n  }\n  useEffect(() => {\n      const render = (cb = () => {}) => {\n          const offcanvas = document.querySelector(\"#offcanvas\");\n          shadow.current.innerHTML = md.render(linkify(source || \"\"));\n          try {\n            shadow.current.querySelectorAll(\".language-flow\").forEach(($el, idx) => {\n              mermaid.mermaidAPI.render(`chart-${idx}`, $el.textContent, svgCode => {\n                $el.innerHTML = svgCode;\n              }, offcanvas);\n            });\n            window.MathJax.Hub.Queue(\n              [\"Typeset\", window.MathJax.Hub, shadow.current],\n              () => {\n                ele.current.innerHTML = shadow.current.innerHTML;\n                cb();\n              }\n            );\n          } catch (err) {}\n      };\n      if (!loaded){\n        !document.querySelector('#MathJax-script') && loadScripts(\n          [\n            [\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\",        {\n            async: true,\n            id: \"MathJax-script\"\n          }]]\n        ).then(() => {\n          window.MathJax.Hub.Config(config);\n          render(() => {\n            setLoaded(true);\n          });\n        });\n      } else {\n        render();\n      }\n      window.addEventListener('message', handleMessage);\n      return () => {\n        window.removeEventListener('message', handleMessage);\n      };\n  }, [source, loaded]);\n  return (\n    <div className=\"preview\">\n      <div ref={shadow} className=\"preview__shadow\" />\n      <div ref={ele} className=\"preview__main\" />\n    </div>\n  );\n}\n\nexport default PreviewComponent;\n","const defaultExample = `# Table Of Content\n[TOC]\n\n## monaco-editor\n[Document](https://microsoft.github.io/monaco-editor/api/index.html) | [Home Page](https://microsoft.github.io/monaco-editor/)\n\n\n## MathJax\n[Document](https://docs.mathjax.org/en/v2.7-latest/index.html) | [Home Page](https://www.mathjax.org/)\n\n\n1. $$ x = \\\\frac {-b \\\\pm \\\\sqrt{b^2 - 4ac }}{2a}$$, ( $$ b^2 - 4ac \\\\ge 0$$ )\n\n1. $$\\\\Delta = b^2 - 4ac $$\n\n\n## mermaid\n\n[Document](https://mermaid-js.github.io/mermaid/) | [Home Page](https://github.com/mermaid-js/mermaid)\n\n### Flow Chart\n\n\\`\\`\\`flow\ngraph LR\n    A[Hard edge] -->|Link text| B(Round edge)\n    B --> C{Decision}\n    C -->|One| D[Result one]\n    C -->|Two| E[Result two]\n\\`\\`\\`\n\n\n### Sequence diagram\n\n\\`\\`\\`flow\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n\\`\\`\\`\n\n\n### Class Diagram\n\n\\`\\`\\`flow\nclassDiagram\nclass Shape{\n    <<interface>>\n    noOfVertices\n    draw()\n}\nclass Color{\n    <<enumeration>>\n    RED\n    BLUE\n    GREEN\n    WHITE\n    BLACK\n}\n\\`\\`\\`\n\n\n### State Diagram\n\n\\`\\`\\`flow\nstateDiagram\n    [*] --> Active\n\n    state Active {\n        [*] --> NumLockOff\n        NumLockOff --> NumLockOn : EvNumLockPressed\n        NumLockOn --> NumLockOff : EvNumLockPressed\n        --\n        [*] --> CapsLockOff\n        CapsLockOff --> CapsLockOn : EvCapsLockPressed\n        CapsLockOn --> CapsLockOff : EvCapsLockPressed\n        --\n        [*] --> ScrollLockOff\n        ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n        ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n    }\n\\`\\`\\`\n\n\n\n### Gantt\n\n\\`\\`\\`flow\ngantt\n    title A Gantt Diagram\n    %% this is a comment\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    another task      : 24d\n\\`\\`\\`\n\n### Pie Chart\n\n\\`\\`\\`flow\npie\n    title Key elements in Product X\n    \"Calcium\" : 42.96\n    \"Potassium\" : 50.05\n    \"Magnesium\" : 10.01\n    \"Iron\" :  5\n\\`\\`\\`\n\n`;\nexport default window.localStorage.getItem('cached') || defaultExample;","import React, { useState } from \"react\";\nimport Editor from './Editor';\nimport Layout from \"./Layout\";\nimport Preview from \"./Preview\";\nimport example from \"./example\";\n\nfunction App() {\n  const [source, setSource] = useState(example);\n  function handleSourceChange(newSource){\n    setSource(newSource);\n  }\n  return (\n    <Layout>\n      <Editor value={source} onChange={handleSourceChange} />\n      <Preview source={source} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport AntdMenu from 'antd/lib/menu';\nimport Dropdown from 'antd/lib/dropdown';\nimport 'antd/lib/menu/style/index.css';\nimport 'antd/lib/dropdown/style/index.css';\n\nfunction runCMD(eventId){\n  setTimeout(() => {\n    window.postMessage({\n      id:eventId\n    });\n  }, 500);\n}\n\nfunction Menu(props) {\n  const menu = (\n  <AntdMenu>\n    <AntdMenu.Item key=\"0\">\n      <a href=\"/#\" onClick={(e) => e.preventDefault() || runCMD('menu.saveAs')}>Print</a>\n    </AntdMenu.Item>\n    <AntdMenu.Item key=\"1\">\n      <a href=\"/#\" onClick={(e) => e.preventDefault() || runCMD('menu.save')}>Save</a>\n    </AntdMenu.Item>\n  </AntdMenu>\n);\n  return (\n    <div className=\"menu\">\n      <a className=\"o-menu-title\" href=\"https://www.moki-life.com\">Home</a>\n      <Dropdown overlay={menu} trigger={['click']} overlayClassName=\"menu-file__overlay\">\n        <a href=\"/#\" className=\"ant-dropdown-link o-menu-title\" onClick={e => e.preventDefault()}>\n          File\n        </a>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default Menu;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\nimport Menu from './Menu';\nimport * as serviceWorker from './serviceWorker'; \nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"offcanvas\"></div>\n    <Menu />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}