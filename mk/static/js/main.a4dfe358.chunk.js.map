{"version":3,"sources":["../node_modules/moment-mini/locale sync /^/.//.*$","Editor.js","Layout.js","mathjax.js","Preview.js","example.js","App.js","Menu.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","message","config","top","duration","maxCount","MyEditor","props","container","useRef","onChange","useEffect","_editor","editor","create","current","value","language","renderLineHighLight","lineDecorationWidth","lineNumbersLeft","lineNumbersWidth","fontSize","lineNumbers","automaticLayout","quickSuggestions","occurrencesHighlight","colorDecorators","wordWrap","theme","minimap","enabled","_model","getModel","saveCache","window","localStorage","setItem","getValue","info","handleMessage","evt","data","handleResize","layout","getBoundingClientRect","onDidChangeContent","debounce","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","addEventListener","removeEventListener","className","ref","MyLayout","children","MathJax","tex","inlineMath","displayMath","processEscapes","options","skipHtmlTags","ignoreHtmlClass","processHtmlClass","startup","elements","typeset","ready","defaultReady","mermaid","initialize","startOnLoad","md","MarkdownIt","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","use","tocPlugin","includeLevel","markerPattern","PreviewComponent","useState","init","setInit","ele","shadow","source","print","offcanvas","document","querySelector","innerHTML","render","getComponents","querySelectorAll","forEach","$el","idx","mermaidAPI","textContent","svgCode","err","console","log","getItem","App","example","setSource","Layout","Editor","newSource","Preview","runCMD","eventId","setTimeout","postMessage","Menu","menu","Item","key","href","onClick","preventDefault","overlay","trigger","overlayClassName","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a4dfe358.chunk.js","sourcesContent":["var map = {\n\t\"./locale\": 311,\n\t\"./locale.js\": 311\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 788;","import React, {useRef, useEffect} from 'react';\nimport  {debounce} from 'lodash';\nimport message from 'antd/lib/message';\nimport { editor, KeyMod, KeyCode } from \"monaco-editor\";\nimport 'antd/lib/message/style/index.css';\n\nmessage.config({\n  top: 20,\n  duration: 2,\n  maxCount: 1\n});\n\nfunction MyEditor(props){\n  const container = useRef(null);\n  const { onChange } = props;\n  useEffect(() => {\n      const _editor = editor.create(container.current, {\n        value: props.value,\n        language: \"markdown\",\n        renderLineHighLight: \"none\",\n        lineDecorationWidth: 0,\n        lineNumbersLeft: 0,\n        lineNumbersWidth: 0,\n        fontSize: 20,\n        lineNumbers: \"on\",\n        automaticLayout: false,\n        quickSuggestions: false,\n        occurrencesHighlight: false,\n        colorDecorators: false,\n        wordWrap: true,\n        theme: \"vs-dark\",\n        minimap: {\n          enabled: false\n        }\n      });\n      const _model = _editor.getModel();\n      _model.onDidChangeContent(debounce(() => {\n        onChange(_model.getValue());\n      }, 500));\n      _editor.addCommand(KeyMod.CtrlCmd | KeyCode.KEY_S, saveCache);\n      function saveCache() {\n        window.localStorage.setItem('cached', _model.getValue());\n        message.info('Saved');\n      }\n      function handleMessage(evt){\n        if(evt.data.id === 'menu.save'){\n          saveCache();\n        }\n      }\n      function handleResize(){\n        _editor.layout(container.current.getBoundingClientRect())\n      }\n      window.addEventListener('resize', handleResize);\n      window.addEventListener('message', handleMessage);\n     return () => {\n        window.removeEventListener('message', handleMessage);\n        window.removeEventListener('resize', handleResize);\n      };\n  }, [props.value, onChange]);\n  return (\n    <div className=\"editor\" ref={container}/>\n  );\n}\n\nexport default MyEditor;\n","import React from \"react\";\n\nfunction MyLayout(props) {\n  return <div className=\"layout\">{props.children}</div>;\n}\n\nexport default MyLayout;\n","window.MathJax = {\n  tex: {\n    inlineMath: [\n      [\"$\", \"$\"],\n      [\"\\\\(\", \"\\\\)\"],\n      [\"$$\", \"$$\"],\n    ],\n    displayMath: [\n      [\"$$\", \"$$\"],\n      [\"\\\\[\", \"\\\\]\"],\n    ],\n    processEscapes: true,\n  },\n  options: {\n    skipHtmlTags: [\n      \"script\",\n      \"noscript\",\n      \"style\",\n      \"textarea\",\n      \"pre\",\n      \"code\",\n      \"a\",\n    ],\n    ignoreHtmlClass: \"editor\",\n    processHtmlClass: \"tex2jax_process\",\n  },\n  startup: {\n    elements: null, // The elements to typeset (default is document body)\n    typeset: true, // Perform initial typeset?\n    ready: () => {\n      window.MathJax.startup.defaultReady();\n      // window.MathJax.startup.promise.then(() => {\n      //   console.log(\"MathJax initial typesetting complete\");\n      // });\n    },\n  },\n};\n\nexport default window.MathJax;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport MarkdownIt from \"markdown-it\";\nimport tocPlugin from \"markdown-it-table-of-contents\";\nimport mermaid from \"mermaid\";\nimport \"./mathjax\";\nimport \"mathjax/es5/tex-svg\";\nmermaid.initialize({ startOnLoad: true });\n\nconst md = new MarkdownIt({\n  html: false,\n  xhtmlOut: false,\n  breaks: false,\n  langPrefix: \"language-\",\n  linkify: true,\n  typographer: false,\n  quotes: \"“”‘’\",\n});\nmd.use(tocPlugin, { includeLevel: [2, 3], markerPattern: /^\\[toc\\]/im });\n\nfunction PreviewComponent(props) {\n  const [init, setInit] = useState(null);\n  const ele = useRef(null);\n  const shadow = useRef(null);\n  const { source } = props;\n  function handleMessage(evt) {\n    if (evt.data.id === \"menu.saveAs\") {\n      window.print();\n    }\n  }\n\n  useEffect(() => {\n    const offcanvas = document.querySelector(\"#offcanvas\");\n    shadow.current.innerHTML = md.render(source || \"\");\n    if (!init) {\n      window.MathJax.startup.elements = ele.current;\n      window.MathJax.startup.getComponents();\n      setInit(true);\n    }\n    try {\n      shadow.current.querySelectorAll(\".language-flow\").forEach(($el, idx) => {\n        mermaid.mermaidAPI.render(\n          `chart-${idx}`,\n          $el.textContent,\n          (svgCode) => {\n            $el.innerHTML = svgCode;\n          },\n          offcanvas\n        );\n      });\n      window.MathJax.typeset();\n      ele.current.innerHTML = shadow.current.innerHTML;\n    } catch (err) {\n      console.log(err);\n    }\n    window.addEventListener(\"message\", handleMessage);\n    return () => {\n      window.removeEventListener(\"message\", handleMessage);\n    };\n  }, [source, init]);\n  return (\n    <div className=\"preview\">\n      <div ref={shadow} className=\"preview__shadow\" />\n      <div ref={ele} className=\"preview__main\" />\n    </div>\n  );\n}\n\nexport default PreviewComponent;\n","const defaultExample = `# Table Of Content\n[TOC]\n\n## monaco-editor\n[Document](https://microsoft.github.io/monaco-editor/api/index.html) | [Home Page](https://microsoft.github.io/monaco-editor/)\n\n\n## MathJax\n[Document](https://docs.mathjax.org/en/v2.7-latest/index.html) | [Home Page](https://www.mathjax.org/)\n\n\n1. $$ x = \\\\frac {-b \\\\pm \\\\sqrt{b^2 - 4ac }}{2a}$$, ( $$ b^2 - 4ac \\\\ge 0$$ )\n\n1. $$\\\\Delta = b^2 - 4ac $$\n\n\n## mermaid\n\n[Document](https://mermaid-js.github.io/mermaid/) | [Home Page](https://github.com/mermaid-js/mermaid)\n\n### Flow Chart\n\n\\`\\`\\`flow\ngraph LR\n    A[Hard edge] -->|Link text| B(Round edge)\n    B --> C{Decision}\n    C -->|One| D[Result one]\n    C -->|Two| E[Result two]\n\\`\\`\\`\n\n\n### Sequence diagram\n\n\\`\\`\\`flow\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n\\`\\`\\`\n\n\n### Class Diagram\n\n\\`\\`\\`flow\nclassDiagram\nclass Shape{\n    <<interface>>\n    noOfVertices\n    draw()\n}\nclass Color{\n    <<enumeration>>\n    RED\n    BLUE\n    GREEN\n    WHITE\n    BLACK\n}\n\\`\\`\\`\n\n\n### State Diagram\n\n\\`\\`\\`flow\nstateDiagram\n    [*] --> Active\n\n    state Active {\n        [*] --> NumLockOff\n        NumLockOff --> NumLockOn : EvNumLockPressed\n        NumLockOn --> NumLockOff : EvNumLockPressed\n        --\n        [*] --> CapsLockOff\n        CapsLockOff --> CapsLockOn : EvCapsLockPressed\n        CapsLockOn --> CapsLockOff : EvCapsLockPressed\n        --\n        [*] --> ScrollLockOff\n        ScrollLockOff --> ScrollLockOn : EvCapsLockPressed\n        ScrollLockOn --> ScrollLockOff : EvCapsLockPressed\n    }\n\\`\\`\\`\n\n\n\n### Gantt\n\n\\`\\`\\`flow\ngantt\n    title A Gantt Diagram\n    %% this is a comment\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    another task      : 24d\n\\`\\`\\`\n\n### Pie Chart\n\n\\`\\`\\`flow\npie\n    title Key elements in Product X\n    \"Calcium\" : 42.96\n    \"Potassium\" : 50.05\n    \"Magnesium\" : 10.01\n    \"Iron\" :  5\n\\`\\`\\`\n\n## Fundament\n# H1\n## H2\n### H3\n#### H4\n##### H5\n### ordered list\n1. item1\n1. item2\n\n### unordered list\n- unorder item1\n- unorder item2\n\n### Table\nname | price | amount \n-|-:|-\none | $1 | 5 |\ntwo | $1 | 6 |\nthree | $1 | 7 |\n\n### Link\n\n[Home Page](https://www.moki-life.com/mk)\n\n`;\nexport default window.localStorage.getItem('cached') || defaultExample;","import React, { useState } from \"react\";\nimport Editor from './Editor';\nimport Layout from \"./Layout\";\nimport Preview from \"./Preview\";\nimport example from \"./example\";\n\nfunction App() {\n  const [source, setSource] = useState(example);\n  function handleSourceChange(newSource){\n    setSource(newSource);\n  }\n  return (\n    <Layout>\n      <Editor value={source} onChange={handleSourceChange} />\n      <Preview source={source} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport AntdMenu from 'antd/lib/menu';\nimport Dropdown from 'antd/lib/dropdown';\nimport 'antd/lib/menu/style/index.css';\nimport 'antd/lib/dropdown/style/index.css';\n\nfunction runCMD(eventId){\n  setTimeout(() => {\n    window.postMessage({\n      id:eventId\n    });\n  }, 500);\n}\n\nfunction Menu(props) {\n  const menu = (\n  <AntdMenu>\n    <AntdMenu.Item key=\"0\">\n      <a href=\"/#\" onClick={(e) => e.preventDefault() || runCMD('menu.saveAs')}>Print</a>\n    </AntdMenu.Item>\n    <AntdMenu.Item key=\"1\">\n      <a href=\"/#\" onClick={(e) => e.preventDefault() || runCMD('menu.save')}>Save</a>\n    </AntdMenu.Item>\n  </AntdMenu>\n);\n  return (\n    <div className=\"menu\">\n      <a className=\"o-menu-title\" href=\"https://www.moki-life.com\">Home</a>\n      <Dropdown overlay={menu} trigger={['click']} overlayClassName=\"menu-file__overlay\">\n        <a href=\"/#\" className=\"ant-dropdown-link o-menu-title\" onClick={e => e.preventDefault()}>\n          File\n        </a>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default Menu;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\nimport Menu from './Menu';\nimport * as serviceWorker from './serviceWorker'; \nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"offcanvas\"></div>\n    <Menu />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}